{"name":"Ngpermission","tagline":"route based permission module for angular js","body":"# ngPermission\r\n\r\nAdd authorization to angular route, so restriction route to specific role becomes so easy.\r\n\r\n> Note:- Works with **ui.route** as well as **ngRoute** :)\r\n\r\nInstall via bower:\r\n```sh\r\nbower install ngPermission\r\n```\r\n\r\nInstall via npm:\r\n```sh\r\nnpm install ngpermission\r\n```\r\n\r\nAdd dependency to you module:\r\n```javascript\r\nangular.module(\"your app name\",[\"ngPermission\"])\r\n```\r\n\r\nAdd role permission to **ngRoute**:\r\n```javascript\r\n.when('/view1', {\r\n        templateUrl: 'view1/view1.html',\r\n        controller: 'View1Ctrl',\r\n        authorizedRole: ['admin']\r\n    })\r\n```\r\n\r\nAdd role permission to **ui.router**:\r\n```javascript\r\n .state('view1', {\r\n        templateUrl: 'view1/view1.html',\r\n        controller: 'View1Ctrl',\r\n        resolve: {\r\n            authorization: [\"ngPermissionService\", function (ngPermissionService) {\r\n                return ngPermissionService.role([\"admin\"])\r\n\r\n            }]\r\n        }\r\n    });\r\n```\r\n\r\n\r\n\r\n\r\nResolve if role is present:\r\n```javascript\r\n.run(['$rootScope', '$http', '$route', function ($rootScope, $http, $route) {\r\n    $rootScope.$on('ngPermission', function (event,roles, defer,routeObject) {\r\n    // do what you want to do\r\n    //role [\"admin\"]\r\n    //routeObject {templateUrl: 'view1/view1.html',controller: 'View1Ctrl',authorizedRole: ['admin']}\r\n        $http.get('/someUrl').success(function(data){\r\n         var indexRole = roles.indexOf(data.role);\r\n         if(indexRole!=-1){\r\n         defer.resolve();\r\n         }\r\n        });\r\n    });\r\n}])\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}